-
    Crear 'Provincia'
-
    !record {model: res.country.state, id: test_state}:
        country_id: base.es
        name: Provincia
        code: '00'

-
    Crear banco 'Banco de España'
-
    !record {model: res.bank, id: test_bank}:
        name: BDE
        code: 1234
        lname: Banco de España
        vat: ES12345678Z
        website: www.bde.es

-
    Crear partner
-
    !record {model: res.partner, id: test_partner}:
        name: Empresa de prueba
        comercial: Nombre comercial

-
    Crear cuenta IBAN
-
    !record {model: res.partner.bank, id: test_partner_bank}:
        name: BDE
        state: iban
        company_id: base.main_company
        partner_id: base.main_partner
        acc_number: ES7620770024003102575766
        country_id: base.es
        state_id: test_state
        bank: test_bank
        bank_name: BDE
        footer: True
        partner_id: test_partner

-
    Comprobar onchange del banco
-
    !python {model: res.partner.bank}: |
        re = self.onchange_banco(cr, uid, [], 'ES7620770024003102575766', ref('base.es'), 'iban', context=None)
        assert 'value' in re and re['value']['acc_number'] == 'ES76 2077 0024 0031 0257 5766', 'IBAN valido detectado como no valido'

        re = self.onchange_banco(cr, uid, [], 'ES9920770024003102575766', ref('base.es'), 'iban', context=None)
        assert 'warning' in re and re['warning']['message'] == 'IBAN account is not valid', 'IBAN no detectado como no valido'

